  .TITLE  CONTROL_MODULE PL/M-VAX CONTROL LANGUAGE HANDLER
  .IDENT  "PL/M-VAX V6.7"         
  .ENABLE GLOBAL
  .ENABLE LOCAL_BLOCK
  .PSECT  $PLM_ROM,RD,NOWRT,EXE,GBL,CON
  .PSECT  $DGROUP_STACK,RD,WRT,EXE,GBL,CON
  .PSECT  $PLM_APD,RD,WRT,NOEXE,GBL,CON,LONG
  .PSECT  MEMORY,PIC,OVR,GBL,SHR,NOEXE,RD,WRT,LONG
 MEMORY.:
  .PSECT  $PLM_DATA,RD,WRT,NOEXE,GBL,CON,LONG
 M. = .+128
  .PSECT  $PLM_CODE,RD,NOWRT,EXE,GBL,CON
  .PSECT  $PLM_DATA                       
 SIZE.8 = 4
 EXCEPP.9 = 8
 PATHP.12 = 4
 EXCEPP.13 = 8
 PATHP.16 = 4
 EXTENSIONP.17 = 8
 EXCEPP.18 = 12
 CONN.21 = 4
 EXCEPP.22 = 8
 PATHP.25 = 4
 EXCEPP.26 = 8
 EXCEPTIONCODE.29 = 4
 MESSAGEP.30 = 8
 EXCEPP.31 = 12
 PATHP.34 = 4
 EXCEPP.35 = 8
 CONN.38 = 4
 EXCEPP.39 = 8
 COMPLETIONCODE.42 = 4
 SEGMENT.45 = 4
 EXCEPP.46 = 8
 ARGUMENTP.49 = 4
 EXCEPP.50 = 8
 CONN.53 = 4
 INFOP.54 = 8
 EXCEPP.55 = 12
 HANDLERP.58 = 4
 EXCEPP.59 = 8
 SEGBASE.62 = 4
 EXCEPP.63 = 8
 IDP.66 = 4
 EXCEPP.67 = 8
 DTP.70 = 4
 EXCEPP.71 = 8
 CONN.74 = 4
 ACCESS.75 = 8
 NUMBUF.76 = 12
 EXCEPP.77 = 16
 NAMEP.80 = 4
 EXCEPP.81 = 8
 CONN.84 = 4
 BUFP.85 = 8
 COUNT.86 = 12
 EXCEPP.87 = 16
 OLDP.90 = 4
 NEWP.91 = 8
 EXCEPP.92 = 12
 CONN.95 = 4
 MODE.96 = 8
 HIGHOFFSET.97 = 12
 LOWOFFSET.98 = 16
 EXCEPP.99 = 20
 DELIMITERSETP.102 = 4
 EXCEPP.103 = 8
 TYPE.106 = 4
 PARAMETERP.107 = 8
 EXCEPP.108 = 12
 BUFFERP.111 = 4
 EXCEPP.112 = 8
 HANDLERP.115 = 4
 EXCEPP.116 = 8
 HANDLERP.119 = 4
 EXCEPP.120 = 8
 CONN.123 = 4
 EXCEPP.124 = 8
 CONN.127 = 4
 BUFP.128 = 8
 COUNT.129 = 12
 EXCEPP.130 = 16
 NAME.204 = 0
 VALUE.205 = 32
 SWITCH.203 = .-M.-33
  .BLKB  1650
 LAST_SWITCH.206 = .-M. 
  .WORD   0
 TOKN.207 = .-M. 
  .BLKB  1
 DELIMITER.208 = .-M. 
  .ASCII  ` `
 ARGUMENT.209 = .-M. 
  .BLKB  81
 ARG_LENGTH.210 = .-M. 
  .BYTE   0
 MSG0.215 = .-M. 
  .ASCII  `INVALID CONTROL`
 MSG1.216 = .-M. 
  .ASCII  `ILLEGAL LIMITED EXPRESSION`
 MSG2.217 = .-M. 
  .ASCII  `CONTROL CARD SYNTAX ERROR`
 MSG3.218 = .-M. 
  .ASCII  `TOO MANY SWITCHES`
 MSG4.219 = .-M. 
  .ASCII  `ATTEMPT TO DIVIDE BY ZERO`
 MSG5.220 = .-M. 
  .ASCII  `BAD DIGIT IN WHOLE-NUMBER`
 MSG6.221 = .-M. 
  .ASCII  `ILLEGAL VALUE FOR PARAMETER`
 MSG7.222 = .-M. 
  .ASCII  `PATH NAME ERROR`
 MSG8.223 = .-M. 
  .ASCII  `ILLEGAL USE OF PRIMARY CONTROL A`
  .ASCII  `FTER NON-CONTROL LINE`
 MSG9.224 = .-M. 
  .ASCII  `INCLUDE FILES NESTED TOO DEEPLY`
 MSG10.225 = .-M. 
  .ASCII  `INCLUDE MUST BE LAST CONTROL ON `
  .ASCII  `LINE`
 MSG11.226 = .-M. 
  .ASCII  `TOO MANY SAVES/RESTORES`
 MSG12.227 = .-M. 
  .ASCII  `IF/ELSEIF/ELSE/ENDIF in illegal `
  .ASCII  `context`
 MSG13.228 = .-M. 
  .ASCII  `IF/ENDIF nested too deeply`
 MSG14.229 = .-M. 
  .ASCII  `Unrecognized ASSUME code`
 LENGTH.231 = 0
 DTYPE.232 = 2
 CLASS.233 = 3
 PTR.234 = 4
 ERROR_MSGD.230 = .-M. 
  .WORD   15
  .BYTE   14
  .BYTE   1
  .LONG   MSG0.215+M.
  .WORD   26
  .BYTE   14
  .BYTE   1
  .LONG   MSG1.216+M.
  .WORD   25
  .BYTE   14
  .BYTE   1
  .LONG   MSG2.217+M.
  .WORD   17
  .BYTE   14
  .BYTE   1
  .LONG   MSG3.218+M.
  .WORD   25
  .BYTE   14
  .BYTE   1
  .LONG   MSG4.219+M.
  .WORD   25
  .BYTE   14
  .BYTE   1
  .LONG   MSG5.220+M.
  .WORD   27
  .BYTE   14
  .BYTE   1
  .LONG   MSG6.221+M.
  .WORD   15
  .BYTE   14
  .BYTE   1
  .LONG   MSG7.222+M.
  .WORD   53
  .BYTE   14
  .BYTE   1
  .LONG   MSG8.223+M.
  .WORD   31
  .BYTE   14
  .BYTE   1
  .LONG   MSG9.224+M.
  .WORD   36
  .BYTE   14
  .BYTE   1
  .LONG   MSG10.225+M.
  .WORD   23
  .BYTE   14
  .BYTE   1
  .LONG   MSG11.226+M.
  .WORD   39
  .BYTE   14
  .BYTE   1
  .LONG   MSG12.227+M.
  .WORD   26
  .BYTE   14
  .BYTE   1
  .LONG   MSG13.228+M.
  .WORD   24
  .BYTE   14
  .BYTE   1
  .LONG   MSG14.229+M.
 MSGD.236 = 4
 ERRORNUMBER.239 = 4
  .PSECT  $PLM_CODE                       
 CONTROL_ERROR.238:
  .WORD   MSK.CONTROL_ERRO.240            
  MOVL    AP,R2
  MOVZBW ERRORNUMBER.239(R2),R10
  MULW2  #8,R10
  MOVZWL R10,R10
  PUSHAB ERROR_MSGD.230(R11)[R10]
  CALLS  #1,FATAL
  RET
 MSK.CONTROL_ERRO.240 = ^M<R2,R10>                              
 STRING1P.242 = 4
 STRING2P.243 = 8
  .PSECT  $PLM_DATA                       
 STRING1.245 = 0
 STRING2.246 = 0
 I.247 = .-M. 
  .BLKB  2
  .PSECT  $PLM_CODE                       
 MATCH.241:
  .WORD   MSK.MATCH.244                   
  MOVL    AP,R2
  MOVW   #-1,I.247(R11)
  BRW    2$                              
 1$:
  MOVL   STRING1P.242(R2),R10
  CVTWL  I.247(R11),R9
  MOVL   STRING2P.243(R2),R8
  CMPB   STRING1.245(R10)[R9],STRING2.246(R8)[R9]
  BNEQU  4$
 3$:
  BRW    5$                              
 4$:
  CLRB   R0
  RET
 5$:
 2$:
  MOVL   STRING1P.242(R2),R10
  MOVZBW STRING1.245(R10),R10
  ACBW   R10,#1,I.247(R11),1$                              
  MOVB   #255,R0
  RET
 MSK.MATCH.244 = ^M<R2,R8,R9,R10>                        
  .PSECT  $PLM_DATA                       
 I.250 = .-M. 
  .BLKB  2
 STATUS.251 = .-M. 
  .BLKB  2
  .PSECT  $PLM_CODE                       
 GET_CONTROL_TOKE.248:
  .WORD   MSK.GET_CONTROL_.249            
 7$:
  TSTB   ARG_LENGTH.210(R11)
  BNEQU  6$
 10$:
  CMPB   DELIMITER.208(R11),#32
  BEQLU  8$
 6$:
  BRW    9$                              
 8$:
  PUSHAW STATUS.251(R11)
  PUSHAB ARGUMENT.209(R11)
  CALLS  #2,DQGETARGUMENT
  MOVB   R0,DELIMITER.208(R11)
  MOVB   ARGUMENT.209(R11),ARG_LENGTH.210(R11)
  BRW    7$                              
 9$:
  TSTB   ARG_LENGTH.210(R11)
  BNEQU  12$
 11$:
  BRW    13$                             
 12$:
  CLRB   ARG_LENGTH.210(R11)
  .PSECT  $PLM_ROM                        
 14$:
  .BYTE   3
  .ASCII `AND`
  .PSECT  $PLM_CODE                       
  PUSHAB 14$
  PUSHAB ARGUMENT.209(R11)
  CALLS  #2,MATCH.241
  MOVB   R0,R10
  BLBS   R10,16$
 15$:
  BRW    17$                             
 16$:
  MOVB   #201,TOKN.207(R11)
  BRW    18$                             
 17$:
  .PSECT  $PLM_ROM                        
 19$:
  .BYTE   2
  .ASCII `OR`
  .PSECT  $PLM_CODE                       
  PUSHAB 19$
  PUSHAB ARGUMENT.209(R11)
  CALLS  #2,MATCH.241
  MOVB   R0,R10
  BLBS   R10,21$
 20$:
  BRW    22$                             
 21$:
  MOVB   #202,TOKN.207(R11)
  BRW    23$                             
 22$:
  .PSECT  $PLM_ROM                        
 24$:
  .BYTE   3
  .ASCII `XOR`
  .PSECT  $PLM_CODE                       
  PUSHAB 24$
  PUSHAB ARGUMENT.209(R11)
  CALLS  #2,MATCH.241
  MOVB   R0,R10
  BLBS   R10,26$
 25$:
  BRW    27$                             
 26$:
  MOVB   #203,TOKN.207(R11)
  BRW    28$                             
 27$:
  .PSECT  $PLM_ROM                        
 29$:
  .BYTE   3
  .ASCII `NOT`
  .PSECT  $PLM_CODE                       
  PUSHAB 29$
  PUSHAB ARGUMENT.209(R11)
  CALLS  #2,MATCH.241
  MOVB   R0,R10
  BLBS   R10,31$
 30$:
  BRW    32$                             
 31$:
  MOVB   #204,TOKN.207(R11)
  BRW    33$                             
 32$:
  CLRB   TOKN.207(R11)
 33$:
 28$:
 23$:
 18$:
  BRW    34$                             
 13$:
  MOVB   DELIMITER.208(R11),TOKN.207(R11)
  MOVB   #32,DELIMITER.208(R11)
 34$:
  RET
 MSK.GET_CONTROL_.249 = ^M<R10>                                 
 TEST_TOKEN.253 = 4
  .PSECT  $PLM_DATA                       
  .PSECT  $PLM_CODE                       
 MUST_MATCH.252:
  .WORD   MSK.MUST_MATCH.254              
  MOVL    AP,R2
  CMPB   TEST_TOKEN.253(R2),TOKN.207(R11)
  BNEQU  36$
 35$:
  BRW    37$                             
 36$:
  PUSHL  #2
  CALLS  #1,CONTROL_ERROR.238
  BRW    38$                             
 37$:
  CALLS  #0,GET_CONTROL_TOKE.248
 38$:
  RET
 MSK.MUST_MATCH.254 = ^M<R2>                                  
  .PSECT  $PLM_DATA                       
 VALUE.257 = .-M. 
  .BLKB  1
 DIGIT.258 = .-M. 
  .BLKB  1
 I.259 = .-M. 
  .BLKB  2
  .PSECT  $PLM_CODE                       
 WHOLE_NUMBER.255:
  .WORD   MSK.WHOLE_NUMBER.256            
  CLRB   VALUE.257(R11)
  CLRW   I.259(R11)
  BRW    40$                             
 39$:
  CVTWL  I.259(R11),R10
  CMPB   ARGUMENT.209(R11)[R10],#48
  BLSSU  42$
 44$:
  CMPB   ARGUMENT.209(R11)[R10],#57
  BGTRU  42$
 41$:
  BRW    43$                             
 42$:
  PUSHL  #5
  CALLS  #1,CONTROL_ERROR.238
  CLRB   DIGIT.258(R11)
  BRW    45$                             
 43$:
  CVTWL  I.259(R11),R10
  SUBB3  #48,ARGUMENT.209(R11)[R10],DIGIT.258(R11)
 45$:
  MOVZBW VALUE.257(R11),R10
  MULW2  #10,R10
  MOVZBW DIGIT.258(R11),R9
  ADDW2  R9,R10
  CVTWB  R10,VALUE.257(R11)
 40$:
  MOVZBW ARGUMENT.209(R11),R10
  ACBW   R10,#1,I.259(R11),39$                             
  CALLS  #0,GET_CONTROL_TOKE.248
  MOVB   VALUE.257(R11),R0
  RET
 MSK.WHOLE_NUMBER.256 = ^M<R9,R10>                              
 MIN.261 = 4
 MAX.262 = 8
 DEFAULT.263 = 12
  .PSECT  $PLM_DATA                       
 VALUE.265 = .-M. 
  .BLKB  1
  .PSECT  $PLM_CODE                       
 WHOLE_NUMBER_PAR.260:
  .WORD   MSK.WHOLE_NUMBER.264            
  MOVL    AP,R2
  PUSHL  #40
  CALLS  #1,MUST_MATCH.252
  CALLS  #0,WHOLE_NUMBER.255
  MOVB   R0,VALUE.265(R11)
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
  CMPB   VALUE.265(R11),MIN.261(R2)
  BLSSU  47$
 49$:
  CMPB   VALUE.265(R11),MAX.262(R2)
  BGTRU  47$
 46$:
  BRW    48$                             
 47$:
  PUSHL  #6
  CALLS  #1,CONTROL_ERROR.238
  MOVB   DEFAULT.263(R2),VALUE.265(R11)
 48$:
  MOVB   VALUE.265(R11),R0
  RET
 MSK.WHOLE_NUMBER.264 = ^M<R2>                                  
 PATHP.267 = 4
 EXTENSIONP.268 = 8
  .PSECT  $PLM_DATA                       
 PATH.270 = 0
 EXPLICIT_EXTENSI.271 = .-M. 
  .BLKB  1
 INSIDE_DIRECTORY.272 = .-M. 
  .BLKB  1
 I.273 = .-M. 
  .BLKB  2
 STATUS.274 = .-M. 
  .BLKB  2
  .PSECT  $PLM_CODE                       
 PATH_NAME_PARAME.266:
  .WORD   MSK.PATH_NAME_PA.269            
  MOVL    AP,R2
  CMPB   ARGUMENT.209(R11),#45
  BGTRU  51$
 50$:
  BRW    52$                             
 51$:
  PUSHL  #7
  CALLS  #1,CONTROL_ERROR.238
  MOVB   #45,ARGUMENT.209(R11)
 52$:
  CLRB   EXPLICIT_EXTENSI.271(R11)
  CLRB   INSIDE_DIRECTORY.272(R11)
  MOVL   PATHP.267(R2),R10
  MOVB   ARGUMENT.209(R11),PATH.270(R10)
  CLRW   I.273(R11)
  BRW    54$                             
 53$:
  CVTWL  I.273(R11),R10
  MOVL   PATHP.267(R2),R9
  MOVB   ARGUMENT.209(R11)[R10],PATH.270(R9)[R10]
  MOVL   PATHP.267(R2),R10
  CVTWL  I.273(R11),R9
  CMPB   PATH.270(R10)[R9],#91
  BEQLU  56$
 55$:
  BRW    57$                             
 56$:
  MOVB   #255,INSIDE_DIRECTORY.272(R11)
  BRW    58$                             
 57$:
  MOVL   PATHP.267(R2),R10
  CVTWL  I.273(R11),R9
  CMPB   PATH.270(R10)[R9],#91
  BEQLU  60$
 59$:
  BRW    61$                             
 60$:
  CLRB   INSIDE_DIRECTORY.272(R11)
  BRW    62$                             
 61$:
  BLBS   INSIDE_DIRECTORY.272(R11),63$
 66$:
  MOVL   PATHP.267(R2),R10
  CVTWL  I.273(R11),R9
  CMPB   PATH.270(R10)[R9],#46
  BEQLU  64$
 63$:
  BRW    65$                             
 64$:
  MOVB   #255,EXPLICIT_EXTENSI.271(R11)
 65$:
 62$:
 58$:
 54$:
  MOVZBW ARGUMENT.209(R11),R10
  ACBW   R10,#1,I.273(R11),53$                             
  BLBC   EXPLICIT_EXTENSI.271(R11),68$
 67$:
  BRW    69$                             
 68$:
  PUSHAW STATUS.274(R11)
  PUSHL  EXTENSIONP.268(R2)
  PUSHL  PATHP.267(R2)
  CALLS  #3,DQCHANGEEXTENSION
  TSTW   STATUS.274(R11)
  BNEQU  71$
 70$:
  BRW    72$                             
 71$:
  PUSHL  #7
  CALLS  #1,CONTROL_ERROR.238
 72$:
 69$:
  RET
 MSK.PATH_NAME_PA.269 = ^M<R2,R9,R10>                           
 STRINGP.276 = 4
  .PSECT  $PLM_DATA                       
 STRING.278 = 0
 I.279 = .-M. 
  .BLKB  1
 J.280 = .-M. 
  .BLKB  1
  .PSECT  $PLM_CODE                       
 PURGE_DOLLAR_SIG.275:
  .WORD   MSK.PURGE_DOLLAR.277            
  MOVL    AP,R2
  CLRW   R0
  BRW    74$                             
 73$:
  CVTWB  R0,I.279(R11)
  MOVL   STRINGP.276(R2),R10
  MOVZBL I.279(R11),R9
  CMPB   STRING.278(R10)[R9],#36
  BEQLU  76$
 75$:
  BRW    77$                             
 76$:
  MOVL   STRINGP.276(R2),R10
  DECB   STRING.278(R10)
  MOVZBW I.279(R11),R10
  SUBW3  #1,R10,R0
  BRW    79$                             
 78$:
  CVTWB  R0,J.280(R11)
  MOVL   STRINGP.276(R2),R10
  MOVZBL J.280(R11),R9
  MOVB   STRING.278+1(R10)[R9],STRING.278(R10)[R9]
  MOVZBW J.280(R11),R0
 79$:
  MOVL   STRINGP.276(R2),R10
  MOVZBW STRING.278(R10),R10
  ACBW   R10,#1,R0,78$                             
  CVTWB  R0,J.280(R11)
 77$:
  MOVZBW I.279(R11),R0
 74$:
  MOVL   STRINGP.276(R2),R10
  MOVZBW STRING.278(R10),R10
  ACBW   R10,#1,R0,73$                             
  CVTWB  R0,I.279(R11)
  RET
 MSK.PURGE_DOLLAR.277 = ^M<R2,R9,R10>                           
  .PSECT  $PLM_DATA                       
 SW.283 = .-M. 
  .BLKB  2
  .PSECT  $PLM_CODE                       
 SWITCH_VALUE.281:
  .WORD   MSK.SWITCH_VALUE.282            
  PUSHAB ARGUMENT.209(R11)
  CALLS  #1,PURGE_DOLLAR_SIG.275
  CMPB   ARGUMENT.209(R11),#31
  BGTRU  81$
 80$:
  BRW    82$                             
 81$:
  MOVB   #31,ARGUMENT.209(R11)
 82$:
  MOVW   #1,SW.283(R11)
 84$:
  CMPW   SW.283(R11),LAST_SWITCH.206(R11)
  BGTR   83$
 87$:
  MULW3  #33,SW.283(R11),R10
  CVTWL  R10,R10
  PUSHAB SWITCH.203+NAME.204(R11)[R10]
  PUSHAB ARGUMENT.209(R11)
  CALLS  #2,MATCH.241
  MOVB   R0,R10
  BLBC   R10,85$
 83$:
  BRW    86$                             
 85$:
  INCW   SW.283(R11)
  BRW    84$                             
 86$:
  CMPW   SW.283(R11),LAST_SWITCH.206(R11)
  BGTR   89$
 88$:
  BRW    90$                             
 89$:
  CLRB   R0
  RET
 90$:
  MULW3  #33,SW.283(R11),R10
  CVTWL  R10,R10
  MOVB   SWITCH.203+VALUE.205(R11)[R10],R0
  RET
 MSK.SWITCH_VALUE.282 = ^M<R10>                                 
 LHSP.285 = 4
 VALUE.286 = 8
  .PSECT  $PLM_DATA                       
 LHS.288 = 0
 SW.289 = .-M. 
  .BLKB  2
 I.290 = .-M. 
  .BLKB  2
  .PSECT  $PLM_CODE                       
 DEFINE_SWITCH_VA.284:
  .WORD   MSK.DEFINE_SWITC.287            
  MOVL    AP,R2
  MOVL   LHSP.285(R2),R10
  PUSHAB LHS.288(R10)
  CALLS  #1,PURGE_DOLLAR_SIG.275
  MOVL   LHSP.285(R2),R10
  CMPB   LHS.288(R10),#31
  BGTRU  92$
 91$:
  BRW    93$                             
 92$:
  MOVL   LHSP.285(R2),R10
  MOVB   #31,LHS.288(R10)
 93$:
  MOVW   #1,SW.289(R11)
 95$:
  CMPW   SW.289(R11),LAST_SWITCH.206(R11)
  BGTR   94$
 98$:
  MULW3  #33,SW.289(R11),R10
  CVTWL  R10,R10
  PUSHAB SWITCH.203+NAME.204(R11)[R10]
  MOVL   LHSP.285(R2),R10
  PUSHAB LHS.288(R10)
  CALLS  #2,MATCH.241
  MOVB   R0,R10
  BLBC   R10,96$
 94$:
  BRW    97$                             
 96$:
  INCW   SW.289(R11)
  BRW    95$                             
 97$:
  CMPW   SW.289(R11),LAST_SWITCH.206(R11)
  BGTR   100$
 99$:
  BRW    101$                            
 100$:
  CMPW   SW.289(R11),#50
  BGTR   103$
 102$:
  BRW    104$                            
 103$:
  PUSHL  #3
  CALLS  #1,CONTROL_ERROR.238
  BRW    105$                            
 104$:
  MOVW   SW.289(R11),LAST_SWITCH.206(R11)
  MOVW   #-1,I.290(R11)
  BRW    107$                            
 106$:
  MOVL   LHSP.285(R2),R10
  CVTWL  I.290(R11),R9
  MULW3  #33,SW.289(R11),R8
  ADDW2  I.290(R11),R8
  CVTWL  R8,R8
  MOVB   LHS.288(R10)[R9],SWITCH.203+NAME.204(R11)[R8]
 107$:
  MOVL   LHSP.285(R2),R10
  MOVZBW LHS.288(R10),R10
  ACBW   R10,#1,I.290(R11),106$                            
  MULW3  #33,SW.289(R11),R10
  CVTWL  R10,R10
  MOVB   VALUE.286(R2),SWITCH.203+VALUE.205(R11)[R10]
 105$:
  BRW    108$                            
 101$:
  MULW3  #33,SW.289(R11),R10
  CVTWL  R10,R10
  MOVB   VALUE.286(R2),SWITCH.203+VALUE.205(R11)[R10]
 108$:
  RET
 MSK.DEFINE_SWITC.287 = ^M<R2,R8,R9,R10>                        
  .PSECT  $PLM_DATA                       
 VALUE.295 = 0
  .PSECT  $PLM_CODE                       
 PRIMARY.293:
  .WORD   MSK.PRIMARY.294                 
  SUBL2  #DYN.PRIMARY.296,SP
  MOVL   SP,AP
  CMPB   TOKN.207(R11),#40
  BEQLU  110$
 109$:
  BRW    111$                            
 110$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,LIMITED_EXPRESSI.291
  MOVB   R0,VALUE.295(AP)
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
  BRW    112$                            
 111$:
  TSTB   TOKN.207(R11)
  BNEQU  114$
 113$:
  BRW    115$                            
 114$:
  PUSHL  #1
  CALLS  #1,CONTROL_ERROR.238
  BRW    116$                            
 115$:
  CMPB   ARGUMENT.209+1(R11),#48
  BLSSU  117$
 120$:
  CMPB   ARGUMENT.209+1(R11),#57
  BLEQU  118$
 117$:
  BRW    119$                            
 118$:
  CALLS  #0,WHOLE_NUMBER.255
  MOVB   R0,VALUE.295(AP)
  BRW    121$                            
 119$:
  CALLS  #0,SWITCH_VALUE.281
  MOVB   R0,VALUE.295(AP)
  CALLS  #0,GET_CONTROL_TOKE.248
 121$:
 116$:
 112$:
  MOVB   VALUE.295(AP),R0
  RET
 MSK.PRIMARY.294 = ^M<>                                    
 DYN.PRIMARY.296 = 1
 SECONDARY.297:
  .WORD   MSK.SECONDARY.298               
  SUBL2  #DYN.SECONDARY.299,SP
  MOVL   SP,AP
  CMPB   TOKN.207(R11),#43
  BEQLU  123$
 122$:
  BRW    124$                            
 123$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,PRIMARY.293
  RET
 124$:
  CMPB   TOKN.207(R11),#45
  BEQLU  126$
 125$:
  BRW    127$                            
 126$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,PRIMARY.293
  MOVB   R0,R10
  MNEGB  R10,R0
  RET
 127$:
  CALLS  #0,PRIMARY.293
  RET
 MSK.SECONDARY.298 = ^M<R10>                                 
 DYN.SECONDARY.299 = 0
  .PSECT  $PLM_DATA                       
 VALUE.302 = 0
 DIVISOR.303 = 1
  .PSECT  $PLM_CODE                       
 TERM.300:
  .WORD   MSK.TERM.301                    
  SUBL2  #DYN.TERM.304,SP
  MOVL   SP,AP
  CALLS  #0,SECONDARY.297
  MOVB   R0,VALUE.302(AP)
 129$:
  CMPB   TOKN.207(R11),#42
  BEQLU  130$
 132$:
  CMPB   TOKN.207(R11),#47
  BEQLU  130$
 128$:
  BRW    131$                            
 130$:
  CMPB   TOKN.207(R11),#42
  BEQLU  134$
 133$:
  BRW    135$                            
 134$:
  CALLS  #0,GET_CONTROL_TOKE.248
  MOVZBW VALUE.302(AP),R10
  CALLS  #0,SECONDARY.297
  MOVB   R0,R9
  MOVZBW R9,R9
  MULW2  R9,R10
  CVTWB  R10,VALUE.302(AP)
  BRW    136$                            
 135$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,SECONDARY.297
  MOVB   R0,DIVISOR.303(AP)
  TSTB   DIVISOR.303(AP)
  BEQLU  138$
 137$:
  BRW    139$                            
 138$:
  PUSHL  #4
  CALLS  #1,CONTROL_ERROR.238
  BRW    140$                            
 139$:
  MOVZBW VALUE.302(AP),R10
  MOVZBW DIVISOR.303(AP),R9
  DIVW2  R9,R10
  CVTWB  R10,VALUE.302(AP)
 140$:
 136$:
  BRW    129$                            
 131$:
  MOVB   VALUE.302(AP),R0
  RET
 MSK.TERM.301 = ^M<R9,R10>                              
 DYN.TERM.304 = 2
  .PSECT  $PLM_DATA                       
 VALUE.307 = 0
  .PSECT  $PLM_CODE                       
 ARITHMETIC_EXPRE.305:
  .WORD   MSK.ARITHMETIC_E.306            
  SUBL2  #DYN.ARITHMETIC_E.308,SP
  MOVL   SP,AP
  CALLS  #0,TERM.300
  MOVB   R0,VALUE.307(AP)
 142$:
  CMPB   TOKN.207(R11),#43
  BEQLU  143$
 145$:
  CMPB   TOKN.207(R11),#45
  BEQLU  143$
 141$:
  BRW    144$                            
 143$:
  CMPB   TOKN.207(R11),#43
  BEQLU  147$
 146$:
  BRW    148$                            
 147$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,TERM.300
  MOVB   R0,R10
  ADDB2  R10,VALUE.307(AP)
  BRW    149$                            
 148$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,TERM.300
  MOVB   R0,R10
  SUBB2  R10,VALUE.307(AP)
 149$:
  BRW    142$                            
 144$:
  MOVB   VALUE.307(AP),R0
  RET
 MSK.ARITHMETIC_E.306 = ^M<R10>                                 
 DYN.ARITHMETIC_E.308 = 1
  .PSECT  $PLM_DATA                       
 VALUE.311 = 0
  .PSECT  $PLM_CODE                       
 LOGICAL_PRIMARY.309:
  .WORD   MSK.LOGICAL_PRIM.310            
  SUBL2  #DYN.LOGICAL_PRIM.312,SP
  MOVL   SP,AP
  CALLS  #0,ARITHMETIC_EXPRE.305
  MOVB   R0,VALUE.311(AP)
  CMPB   TOKN.207(R11),#60
  BEQLU  151$
 150$:
  BRW    152$                            
 151$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CMPB   TOKN.207(R11),#62
  BEQLU  154$
 153$:
  BRW    155$                            
 154$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,ARITHMETIC_EXPRE.305
  MOVB   R0,R10
  CMPB   VALUE.311(AP),R10
  BNEQU  156$                            
  CLRB   VALUE.311(AP)
  BRB    157$                            
 156$:
  MCOMB  #0,VALUE.311(AP)
 157$:
  BRW    158$                            
 155$:
  CMPB   TOKN.207(R11),#61
  BEQLU  160$
 159$:
  BRW    161$                            
 160$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,ARITHMETIC_EXPRE.305
  MOVB   R0,R10
  CMPB   VALUE.311(AP),R10
  BLEQU  162$                            
  CLRB   VALUE.311(AP)
  BRB    163$                            
 162$:
  MCOMB  #0,VALUE.311(AP)
 163$:
  BRW    164$                            
 161$:
  CALLS  #0,ARITHMETIC_EXPRE.305
  MOVB   R0,R10
  CMPB   VALUE.311(AP),R10
  BLSSU  165$                            
  CLRB   VALUE.311(AP)
  BRB    166$                            
 165$:
  MCOMB  #0,VALUE.311(AP)
 166$:
 164$:
 158$:
  BRW    167$                            
 152$:
  CMPB   TOKN.207(R11),#62
  BEQLU  169$
 168$:
  BRW    170$                            
 169$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CMPB   TOKN.207(R11),#61
  BEQLU  172$
 171$:
  BRW    173$                            
 172$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,ARITHMETIC_EXPRE.305
  MOVB   R0,R10
  CMPB   VALUE.311(AP),R10
  BGEQU  174$                            
  CLRB   VALUE.311(AP)
  BRB    175$                            
 174$:
  MCOMB  #0,VALUE.311(AP)
 175$:
  BRW    176$                            
 173$:
  CALLS  #0,ARITHMETIC_EXPRE.305
  MOVB   R0,R10
  CMPB   VALUE.311(AP),R10
  BGTRU  177$                            
  CLRB   VALUE.311(AP)
  BRB    178$                            
 177$:
  MCOMB  #0,VALUE.311(AP)
 178$:
 176$:
  BRW    179$                            
 170$:
  CMPB   TOKN.207(R11),#61
  BEQLU  181$
 180$:
  BRW    182$                            
 181$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,ARITHMETIC_EXPRE.305
  MOVB   R0,R10
  CMPB   VALUE.311(AP),R10
  BEQLU  183$                            
  CLRB   VALUE.311(AP)
  BRB    184$                            
 183$:
  MCOMB  #0,VALUE.311(AP)
 184$:
 182$:
 179$:
 167$:
  MOVB   VALUE.311(AP),R0
  RET
 MSK.LOGICAL_PRIM.310 = ^M<R10>                                 
 DYN.LOGICAL_PRIM.312 = 1
 LOGICAL_SECONDAR.313:
  .WORD   MSK.LOGICAL_SECO.314            
  SUBL2  #DYN.LOGICAL_SECO.315,SP
  MOVL   SP,AP
  CMPB   TOKN.207(R11),#204
  BEQLU  186$
 185$:
  BRW    187$                            
 186$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,LOGICAL_PRIMARY.309
  MOVB   R0,R10
  MCOMB  R10,R0
  RET
 187$:
  CALLS  #0,LOGICAL_PRIMARY.309
  RET
 MSK.LOGICAL_SECO.314 = ^M<R10>                                 
 DYN.LOGICAL_SECO.315 = 0
  .PSECT  $PLM_DATA                       
 VALUE.318 = 0
  .PSECT  $PLM_CODE                       
 LOGICAL_FACTOR.316:
  .WORD   MSK.LOGICAL_FACT.317            
  SUBL2  #DYN.LOGICAL_FACT.319,SP
  MOVL   SP,AP
  CALLS  #0,LOGICAL_SECONDAR.313
  MOVB   R0,VALUE.318(AP)
 189$:
  CMPB   TOKN.207(R11),#201
  BEQLU  190$
 188$:
  BRW    191$                            
 190$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,LOGICAL_SECONDAR.313
  MOVB   R0,R10
  MCOMB  R10,R10
  BICB2  R10,VALUE.318(AP)
  BRW    189$                            
 191$:
  MOVB   VALUE.318(AP),R0
  RET
 MSK.LOGICAL_FACT.317 = ^M<R10>                                 
 DYN.LOGICAL_FACT.319 = 1
  .PSECT  $PLM_DATA                       
 VALUE.321 = 0
  .PSECT  $PLM_CODE                       
 LIMITED_EXPRESSI.291:
  .WORD   MSK.LIMITED_EXPR.320            
  SUBL2  #DYN.LIMITED_EXPR.322,SP
  MOVL   SP,AP
  CALLS  #0,LOGICAL_FACTOR.316
  MOVB   R0,VALUE.321(AP)
 193$:
  CMPB   TOKN.207(R11),#202
  BEQLU  194$
 196$:
  CMPB   TOKN.207(R11),#203
  BEQLU  194$
 192$:
  BRW    195$                            
 194$:
  CMPB   TOKN.207(R11),#202
  BEQLU  198$
 197$:
  BRW    199$                            
 198$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,LOGICAL_FACTOR.316
  MOVB   R0,R10
  BISB2  R10,VALUE.321(AP)
  BRW    200$                            
 199$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,LOGICAL_FACTOR.316
  MOVB   R0,R10
  XORB2  R10,VALUE.321(AP)
 200$:
  BRW    193$                            
 195$:
  MOVB   VALUE.321(AP),R0
  RET
 MSK.LIMITED_EXPR.320 = ^M<R10>                                 
 DYN.LIMITED_EXPR.322 = 1
 STRINGP.324 = 4
  .PSECT  $PLM_DATA                       
 STRING.326 = 0
 I.327 = .-M. 
  .BLKB  2
  .PSECT  $PLM_CODE                       
 GET_STRING_PARAM.323:
  .WORD   MSK.GET_STRING_P.325            
  MOVL    AP,R2
  PUSHL  #40
  CALLS  #1,MUST_MATCH.252
  MOVW   #-1,I.327(R11)
  BRW    202$                            
 201$:
  CVTWL  I.327(R11),R10
  MOVL   STRINGP.324(R2),R9
  MOVB   ARGUMENT.209(R11)[R10],STRING.326(R9)[R10]
 202$:
  MOVZBW ARGUMENT.209(R11),R10
  ACBW   R10,#1,I.327(R11),201$                            
  CALLS  #0,GET_CONTROL_TOKE.248
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
  RET
 MSK.GET_STRING_P.325 = ^M<R2,R9,R10>                           
 PATHP.329 = 4
 EXTENSIONP.330 = 8
  .PSECT  $PLM_DATA                       
  .PSECT  $PLM_CODE                       
 OPTIONAL_PATH_NA.328:
  .WORD   MSK.OPTIONAL_PAT.331            
  MOVL    AP,R2
  CMPB   TOKN.207(R11),#40
  BEQLU  204$
 203$:
  BRW    205$                            
 204$:
  CALLS  #0,GET_CONTROL_TOKE.248
  PUSHL  EXTENSIONP.330(R2)
  PUSHL  PATHP.329(R2)
  CALLS  #2,PATH_NAME_PARAME.266
  CALLS  #0,GET_CONTROL_TOKE.248
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
 205$:
  RET
 MSK.OPTIONAL_PAT.331 = ^M<R2>                                  
  .PSECT  $PLM_DATA                       
 NAME.334 = 0
 PRIMARY.335 = 12
 CONTROL.333 = .-M. 
  .BYTE   5
  .ASCII  `PRINT      `
  .BYTE   255
  .BYTE   7
  .ASCII  `NOPRINT    `
  .BYTE   255
  .BYTE   4
  .ASCII  `LIST       `
  .BYTE   0
  .BYTE   6
  .ASCII  `NOLIST     `
  .BYTE   0
  .BYTE   4
  .ASCII  `CODE       `
  .BYTE   0
  .BYTE   6
  .ASCII  `NOCODE     `
  .BYTE   0
  .BYTE   4
  .ASCII  `XREF       `
  .BYTE   255
  .BYTE   6
  .ASCII  `NOXREF     `
  .BYTE   255
  .BYTE   5
  .ASCII  `IXREF      `
  .BYTE   255
  .BYTE   7
  .ASCII  `NOIXREF    `
  .BYTE   255
  .BYTE   7
  .ASCII  `SYMBOLS    `
  .BYTE   255
  .BYTE   9
  .ASCII  `NOSYMBOLS  `
  .BYTE   255
  .BYTE   6
  .ASCII  `PAGING     `
  .BYTE   255
  .BYTE   8
  .ASCII  `NOPAGING   `
  .BYTE   255
  .BYTE   10
  .ASCII  `PAGELENGTH `
  .BYTE   255
  .BYTE   9
  .ASCII  `PAGEWIDTH  `
  .BYTE   255
  .BYTE   4
  .ASCII  `DATE       `
  .BYTE   255
  .BYTE   5
  .ASCII  `TITLE      `
  .BYTE   255
  .BYTE   8
  .ASCII  `SUBTITLE   `
  .BYTE   0
  .BYTE   5
  .ASCII  `EJECT      `
  .BYTE   0
  .BYTE   10
  .ASCII  `LEFTMARGIN `
  .BYTE   0
  .BYTE   9
  .ASCII  `INTVECTOR  `
  .BYTE   255
  .BYTE   11
  .ASCII  `NOINTVECTOR`
  .BYTE   255
  .BYTE   8
  .ASCII  `OPTIMIZE   `
  .BYTE   255
  .BYTE   6
  .ASCII  `OBJECT     `
  .BYTE   255
  .BYTE   8
  .ASCII  `NOOBJECT   `
  .BYTE   255
  .BYTE   8
  .ASCII  `OVERFLOW   `
  .BYTE   0
  .BYTE   10
  .ASCII  `NOOVERFLOW `
  .BYTE   0
  .BYTE   5
  .ASCII  `DEBUG      `
  .BYTE   255
  .BYTE   7
  .ASCII  `NODEBUG    `
  .BYTE   255
  .BYTE   4
  .ASCII  `TYPE       `
  .BYTE   255
  .BYTE   6
  .ASCII  `NOTYPE     `
  .BYTE   255
  .BYTE   9
  .ASCII  `WORKFILES  `
  .BYTE   255
  .BYTE   7
  .ASCII  `INCLUDE    `
  .BYTE   0
  .BYTE   4
  .ASCII  `SAVE       `
  .BYTE   0
  .BYTE   7
  .ASCII  `RESTORE    `
  .BYTE   0
  .BYTE   3
  .ASCII  `RAM        `
  .BYTE   255
  .BYTE   3
  .ASCII  `ROM        `
  .BYTE   255
  .BYTE   5
  .ASCII  `SMALL      `
  .BYTE   255
  .BYTE   7
  .ASCII  `COMPACT    `
  .BYTE   255
  .BYTE   6
  .ASCII  `MEDIUM     `
  .BYTE   255
  .BYTE   5
  .ASCII  `LARGE      `
  .BYTE   255
  .BYTE   4
  .ASCII  `COND       `
  .BYTE   0
  .BYTE   6
  .ASCII  `NOCOND     `
  .BYTE   0
  .BYTE   3
  .ASCII  `SET        `
  .BYTE   0
  .BYTE   5
  .ASCII  `RESET      `
  .BYTE   0
  .BYTE   2
  .ASCII  `IF         `
  .BYTE   0
  .BYTE   6
  .ASCII  `ELSEIF     `
  .BYTE   0
  .BYTE   4
  .ASCII  `ELSE       `
  .BYTE   0
  .BYTE   5
  .ASCII  `ENDIF      `
  .BYTE   0
  .BYTE   6
  .ASCII  `OPRINT     `
  .BYTE   255
  .BYTE   8
  .ASCII  `NOOPRINT   `
  .BYTE   255
  .BYTE   4
  .ASCII  `TABS       `
  .BYTE   255
  .BYTE   6
  .ASCII  `NOTABS     `
  .BYTE   255
  .BYTE   4
  .ASCII  `WARN       `
  .BYTE   255
  .BYTE   6
  .ASCII  `NOWARN     `
  .BYTE   255
  .BYTE   5
  .ASCII  `PLM80      `
  .BYTE   255
  .BYTE   7
  .ASCII  `GLOBALS    `
  .BYTE   255
  .BYTE   9
  .ASCII  `NOGLOBALS  `
  .BYTE   255
  .BYTE   7
  .ASCII  `PUBLICS    `
  .BYTE   255
  .BYTE   9
  .ASCII  `NOPUBLICS  `
  .BYTE   255
  .BYTE   7
  .ASCII  `OVERLAY    `
  .BYTE   255
  .BYTE   9
  .ASCII  `NOOVERLAY  `
  .BYTE   255
  .BYTE   4
  .ASCII  `ROOT       `
  .BYTE   255
  .BYTE   6
  .ASCII  `NOROOT     `
  .BYTE   255
  .BYTE   5
  .ASCII  `ALIGN      `
  .BYTE   255
  .BYTE   7
  .ASCII  `NOALIGN    `
  .BYTE   255
  .BYTE   11
  .ASCII  `FREQUENCIES`
  .BYTE   255
  .BYTE   6
  .ASCII  `VECTOR     `
  .BYTE   255
  .BYTE   8
  .ASCII  `NOVECTOR   `
  .BYTE   255
  .BYTE   6
  .ASCII  `ASSUME     `
  .BYTE   255
  .BYTE   0
  .ASCII  `           `
  .BYTE   0
  .PSECT  CONTROLS,PIC,OVR,GBL,SHR,NOEXE,RD,WRT,LONG
 LEFTMARGIN.337 = . 
  .BLKB  2
 RIGHTMARGIN.338 = . 
  .BLKB  2
 LIST_FLAG.339 = . 
  .BLKB  1
 LARGE_FLAG.340 = . 
  .BLKB  1
 NON_CONTROL_LINE.341 = . 
  .BLKB  1
 SKIP_STATE.342 = . 
  .BLKB  2
 PAGELENGTH.343 = . 
  .BLKB  2
 PAGEWIDTH.344 = . 
  .BLKB  2
 OPTIMIZE.345 = . 
  .BLKB  2
 MODEL.346 = . 
  .BLKB  2
 PRINT_FLAG.347 = . 
  .BLKB  1
 CODE_FLAG.348 = . 
  .BLKB  1
 XREF_FLAG.349 = . 
  .BLKB  1
 IXREF_FLAG.350 = . 
  .BLKB  1
 SYMBOLS_FLAG.351 = . 
  .BLKB  1
 PAGING_FLAG.352 = . 
  .BLKB  1
 EJECT_FLAG.353 = . 
  .BLKB  1
 INTVECTOR_FLAG.354 = . 
  .BLKB  1
 OBJECT_FLAG.355 = . 
  .BLKB  1
 OVERFLOW_FLAG.356 = . 
  .BLKB  1
 DEBUG_FLAG.357 = . 
  .BLKB  1
 TYPE_FLAG.358 = . 
  .BLKB  1
 ROM_FLAG.359 = . 
  .BLKB  1
 COND_FLAG.360 = . 
  .BLKB  1
 PRINT_FILE_STRIN.361 = . 
  .BLKB  46
 IXREF_FILE_STRIN.362 = . 
  .BLKB  46
 WORK_FILE_STRING.363 = . 
  .BLKB  46
 OBJECT_FILE_STRI.364 = . 
  .BLKB  46
 DATE_STRING.365 = . 
  .BLKB  81
 TITLE_STRING.366 = . 
  .BLKB  81
 SUBTITLE_STRING.367 = . 
  .BLKB  81
 STRING.369 = 0
 IN_FILE_STRING.368 = .-368
  .BLKB  644
 OPRINT_FILE_STRI.370 = . 
  .BLKB  46
 OPRINT_FLAG.371 = . 
  .BLKB  1
 TABS.372 = . 
  .BLKB  2
 WARN_FLAG.373 = . 
  .BLKB  1
 PLM80_FLAG.374 = . 
  .BLKB  1
 GLOBALS_FLAG.375 = . 
  .BLKB  1
 PUBLICS_FLAG.376 = . 
  .BLKB  1
 OVERLAY_FLAG.377 = . 
  .BLKB  1
 ROOT_FLAG.378 = . 
  .BLKB  1
 GLOBALS_FILE_STR.379 = . 
  .BLKB  46
 PUBLICS_FILE_STR.380 = . 
  .BLKB  46
 OVERLAY_PREFIX.381 = . 
  .BLKB  81
 ALIGN_FLAG.382 = . 
  .BLKB  1
 FREQ_FLAG.383 = . 
  .BLKB  1
 VECTOR_FLAG.384 = . 
  .BLKB  1
  .PSECT  IO,PIC,OVR,GBL,SHR,NOEXE,RD,WRT,LONG
 IN.385 = . 
  .BLKB  2
 OUT.386 = . 
  .BLKB  2
 LST.387 = . 
  .BLKB  2
 IXI.388 = . 
  .BLKB  2
 GBL.389 = . 
  .BLKB  2
 PUB.390 = . 
  .BLKB  2
  .PSECT  $PLM_DATA                       
 SAVE_LEVEL.392 = .-M. 
  .WORD   0
 LIST.394 = 0
 CODE.395 = 1
 OVERFLOW.396 = 2
 LEFTMARGIN.397 = 3
 COND.398 = 5
 CS.393 = .-M. 
  .BLKB  96
 THIS_SWITCH.399 = .-M. 
  .BLKB  81
 SKIP_STATE_STACK.402 = .-M. 
  .BLKB  40
 SKIP_LEVEL.403 = .-M. 
  .WORD   0
 NEW_STATE.405 = 4
  .PSECT  $PLM_CODE                       
 PUSH_SKIP_STATE.404:
  .WORD   MSK.PUSH_SKIP_ST.406            
  MOVL    AP,R2
  CVTWL  SKIP_LEVEL.403(R11),R10
  MOVW   SKIP_STATE.342,SKIP_STATE_STACK.402(R11)[R10]
  MOVW   NEW_STATE.405(R2),SKIP_STATE.342
  INCW   SKIP_LEVEL.403(R11)
  CMPW   SKIP_LEVEL.403(R11),#20
  BGEQ   207$
 206$:
  BRW    208$                            
 207$:
  PUSHL  #13
  CALLS  #1,CONTROL_ERROR.238
 208$:
  RET
 MSK.PUSH_SKIP_ST.406 = ^M<R2,R10>                              
 POP_SKIP_STATE.407:
  .WORD   MSK.POP_SKIP_STA.408            
  DECW   SKIP_LEVEL.403(R11)
  CVTWL  SKIP_LEVEL.403(R11),R10
  MOVW   SKIP_STATE_STACK.402(R11)[R10],SKIP_STATE.342
  RET
 MSK.POP_SKIP_STA.408 = ^M<R10>                                 
  .PSECT  $PLM_DATA                       
  .PSECT  ASSUMPTIONS,PIC,OVR,GBL,SHR,NOEXE,RD,WRT,LONG
 ASSUMPTION_FLAG.412 = . 
  .BLKB  15
 NAME.414 = 0
 OPTIMIZE_SETTING.415 = 3
  .PSECT  $PLM_ROM                        
 ASSUMPTION.413 = . 
  .ASCII  `SCE`
  .BYTE   0
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `CSE`
  .BYTE   0
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `EEQ`
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `PSE`
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `BRO`
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .BYTE   0
  .ASCII  `BBA`
  .BYTE   0
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `CTE`
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `MCO`
  .BYTE   0
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `CFA`
  .BYTE   0
  .BYTE   0
  .BYTE   255
  .BYTE   255
  .ASCII  `SWB`
  .BYTE   0
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `OSR`
  .BYTE   0
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `SVE`
  .BYTE   0
  .BYTE   0
  .BYTE   0
  .BYTE   255
  .ASCII  `S64`
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .BYTE   255
  .ASCII  `C7F`
  .BYTE   0
  .BYTE   0
  .BYTE   0
  .BYTE   255
  .ASCII  `DBG`
  .BYTE   0
  .BYTE   0
  .BYTE   0
  .BYTE   0
  .PSECT  $PLM_DATA                       
 SET_FLAG_SENSE.418 = .-M. 
  .BLKB  1
 I.419 = .-M. 
  .BLKB  1
  .PSECT  $PLM_CODE                       
 PROCESS_ASSUMPTI.416:
  .WORD   MSK.PROCESS_ASSU.417            
  CMPB   TOKN.207(R11),#40
  BNEQU  210$
 209$:
  BRW    211$                            
 210$:
  PUSHL  #2
  CALLS  #1,CONTROL_ERROR.238
 211$:
  MOVB   #44,TOKN.207(R11)
 213$:
  CMPB   TOKN.207(R11),#44
  BEQLU  214$
 212$:
  BRW    215$                            
 214$:
  CALLS  #0,GET_CONTROL_TOKE.248
  TSTB   TOKN.207(R11)
  BNEQU  217$
 216$:
  BRW    218$                            
 217$:
  PUSHL  #2
  CALLS  #1,CONTROL_ERROR.238
 218$:
  .PSECT  $PLM_ROM                        
 219$:
  .BYTE   5
  .ASCII `NO`
  .PSECT  $PLM_CODE                       
  PUSHL  #3
  PUSHAB 219$
  PUSHAB ARGUMENT.209(R11)
  CALLS  #3,CMPB.
  MOVW   R0,R10
  CMPW   R10,#65535
  BEQLU  221$
 220$:
  BRW    222$                            
 221$:
  CLRB   SET_FLAG_SENSE.418(R11)
  PUSHL  #3
  PUSHAB ARGUMENT.209+1(R11)
  PUSHAB ARGUMENT.209+3(R11)
  CALLS  #3,MOVB.
  BRW    223$                            
 222$:
  CMPB   ARGUMENT.209(R11),#3
  BEQLU  225$
 224$:
  BRW    226$                            
 225$:
  MOVB   #255,SET_FLAG_SENSE.418(R11)
  BRW    227$                            
 226$:
  PUSHL  #14
  CALLS  #1,CONTROL_ERROR.238
 227$:
 223$:
  CLRB   I.419(R11)
 229$:
  CMPB   I.419(R11),#15
  BGEQU  228$
 232$:
  PUSHL  #3
  MOVZBW I.419(R11),R10
  MULW2  #7,R10
  MOVZWL R10,R10
  PUSHAB ASSUMPTION.413+NAME.414[R10]
  PUSHAB ARGUMENT.209+1(R11)
  CALLS  #3,CMPB.
  MOVW   R0,R10
  CMPW   R10,#65535
  BNEQU  230$
 228$:
  BRW    231$                            
 230$:
  INCB   I.419(R11)
  BRW    229$                            
 231$:
  CMPB   I.419(R11),#15
  BEQLU  234$
 233$:
  BRW    235$                            
 234$:
  PUSHL  #14
  CALLS  #1,CONTROL_ERROR.238
 235$:
  MOVZBL I.419(R11),R10
  MOVB   SET_FLAG_SENSE.418(R11),ASSUMPTION_FLAG.412[R10]
  CALLS  #0,GET_CONTROL_TOKE.248
  BRW    213$                            
 215$:
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
  RET
 MSK.PROCESS_ASSU.417 = ^M<R10>                                 
 UNITP.421 = 4
 FILE_STRINGP.422 = 8
  .PSECT  $PLM_DATA                       
 UNITP.425 = 4
 FILE_STRINGP.426 = 8
  .PSECT  $PLM_CODE                       
 OPEN_OUTPUT_FILES::
  .WORD   MSK.OPEN_OUTPUT_.429            
  MOVAB   M.,R11
  BLBS   PRINT_FLAG.347,237$
 236$:
  BRW    238$                            
 237$:
  PUSHAB PRINT_FILE_STRIN.361
  PUSHAW LST.387
  CALLS  #2,OPEN_OUTPUT_FILE
 238$:
  BLBS   OBJECT_FLAG.355,240$
 239$:
  BRW    241$                            
 240$:
  PUSHAB WORK_FILE_STRING.363
  PUSHAW OUT.386
  CALLS  #2,OPEN_OUTPUT_FILE
 241$:
  BLBS   IXREF_FLAG.350,243$
 242$:
  BRW    244$                            
 243$:
  PUSHAB IXREF_FILE_STRIN.362
  PUSHAW IXI.388
  CALLS  #2,OPEN_OUTPUT_FILE
 244$:
  BLBS   GLOBALS_FLAG.375,246$
 245$:
  BRW    247$                            
 246$:
  PUSHAB GLOBALS_FILE_STR.379
  PUSHAW GBL.389
  CALLS  #2,OPEN_SOS_FILE
 247$:
  BLBS   PUBLICS_FLAG.376,249$
 248$:
  BRW    250$                            
 249$:
  PUSHAB PUBLICS_FILE_STR.380
  PUSHAW PUB.390
  CALLS  #2,OPEN_OUTPUT_FILE
 250$:
  RET
 MSK.OPEN_OUTPUT_.429 = ^M<R11>                                 
  .PSECT  $PLM_DATA                       
 CMD.432 = .-M. 
  .BLKB  2
 I.433 = .-M. 
  .BLKB  2
 OLD_SKIP_STATE.434 = .-M. 
  .BLKB  2
 CONDITIONAL_CONT.435 = .-M. 
  .BLKB  1
 FIRST_CONTROL.436 = .-M. 
  .BLKB  1
  .PSECT  $PLM_CODE                       
 CONTROL_LINE::
  .WORD   MSK.CONTROL_LINE.431            
  MOVAB   M.,R11
  CALLS  #0,GET_CONTROL_TOKE.248
  MOVB   #255,FIRST_CONTROL.436(R11)
 CONTROL_LOOP.437:
 252$:
 256$:
  TSTB   TOKN.207(R11)
  BNEQU  257$
 255$:
  BRW    258$                            
 257$:
  CMPB   TOKN.207(R11),#13
  BEQLU  260$
 259$:
  BRW    261$                            
 260$:
  RET
 261$:
  CLRL   -(SP)
  CALLS  #1,CONTROL_ERROR.238
  CALLS  #0,GET_CONTROL_TOKE.248
  BRW    256$                            
 258$:
  CLRW   CMD.432(R11)
 263$:
  CMPW   CMD.432(R11),#71
  BGEQ   262$
 266$:
  MULW3  #13,CMD.432(R11),R10
  CVTWL  R10,R10
  PUSHAB CONTROL.333+NAME.334(R11)[R10]
  PUSHAB ARGUMENT.209(R11)
  CALLS  #2,MATCH.241
  MOVB   R0,R10
  BLBC   R10,264$
 262$:
  BRW    265$                            
 264$:
  INCW   CMD.432(R11)
  BRW    263$                            
 265$:
  CALLS  #0,GET_CONTROL_TOKE.248
  MULW3  #13,CMD.432(R11),R10
  CVTWL  R10,R10
  BBC    #0,CONTROL.333+PRIMARY.335(R11)[R10],267$
 270$:
  BLBS   NON_CONTROL_LINE.341,268$
 267$:
  BRW    269$                            
 268$:
  PUSHL  #8
  CALLS  #1,CONTROL_ERROR.238
 269$:
  CMPW   CMD.432(R11),#46
  BGEQ   271$                            
  CLRB   R10
  BRB    272$                            
 271$:
  MCOMB  #0,R10
 272$:
  CMPW   CMD.432(R11),#49
  BLEQ   273$                            
  CLRB   R9
  BRB    274$                            
 273$:
  MCOMB  #0,R9
 274$:
  MCOMB  R9,R9
  BICB3  R9,R10,CONDITIONAL_CONT.435(R11)
  BLBC   CONDITIONAL_CONT.435(R11),275$
 278$:
  BLBC   FIRST_CONTROL.436(R11),276$
 275$:
  BRW    277$                            
 276$:
  PUSHL  #12
  CALLS  #1,CONTROL_ERROR.238
 277$:
  BRW    279$                            
 282$:
  BRW    281$                            
 283$:
  BRW    281$                            
 284$:
  BLBC   CONDITIONAL_CONT.435(R11),286$
 285$:
  BRW    287$                            
 286$:
  BRW     PREMATURE_EXIT.438              
 287$:
  BRW    281$                            
 288$:
  BLBC   CONDITIONAL_CONT.435(R11),290$
 289$:
  BRW    291$                            
 290$:
  BRW     PREMATURE_EXIT.438              
 291$:
  BRW    281$                            
 292$:
  BRW    281$                            
 279$:
  CASEW  SKIP_STATE.342,#0,#4
 280$:
  .SIGNED_WORD  282$-280$
  .SIGNED_WORD  283$-280$
  .SIGNED_WORD  284$-280$
  .SIGNED_WORD  288$-280$
  .SIGNED_WORD  292$-280$
 281$:
  MOVW   SKIP_STATE.342,OLD_SKIP_STATE.434(R11)
 COMMAND_CASE.439:
  BRW    293$                            
 296$:
  .PSECT  $PLM_ROM                        
 297$:
  .ASCII `LIS`
  .PSECT  $PLM_CODE                       
  PUSHAB 297$
  PUSHAB PRINT_FILE_STRIN.361
  CALLS  #2,OPTIONAL_PATH_NA.328
  MOVB   #255,PRINT_FLAG.347
  BRW    295$                            
 298$:
  CLRB   PRINT_FLAG.347
  BRW    295$                            
 299$:
  MOVB   #255,LIST_FLAG.339
  BRW    295$                            
 300$:
  CLRB   LIST_FLAG.339
  BRW    295$                            
 301$:
  MOVB   #255,CODE_FLAG.348
  BRW    295$                            
 302$:
  CLRB   CODE_FLAG.348
  BRW    295$                            
 303$:
  MOVB   #255,XREF_FLAG.349
  BRW    295$                            
 304$:
  CLRB   XREF_FLAG.349
  BRW    295$                            
 305$:
  .PSECT  $PLM_ROM                        
 306$:
  .ASCII `IXI`
  .PSECT  $PLM_CODE                       
  PUSHAB 306$
  PUSHAB IXREF_FILE_STRIN.362
  CALLS  #2,OPTIONAL_PATH_NA.328
  MOVB   #255,IXREF_FLAG.350
  BRW    295$                            
 307$:
  CLRB   IXREF_FLAG.350
  BRW    295$                            
 308$:
  MOVB   #255,SYMBOLS_FLAG.351
  BRW    295$                            
 309$:
  CLRB   SYMBOLS_FLAG.351
  BRW    295$                            
 310$:
  MOVB   #255,PAGING_FLAG.352
  BRW    295$                            
 311$:
  CLRB   PAGING_FLAG.352
  BRW    295$                            
 312$:
  PUSHL  #60
  PUSHL  #200
  PUSHL  #5
  CALLS  #3,WHOLE_NUMBER_PAR.260
  MOVB   R0,R10
  MOVZBW R10,PAGELENGTH.343
  BRW    295$                            
 313$:
  PUSHL  #120
  PUSHL  #132
  PUSHL  #60
  CALLS  #3,WHOLE_NUMBER_PAR.260
  MOVB   R0,R10
  MOVZBW R10,PAGEWIDTH.344
  BRW    295$                            
 314$:
  PUSHAB DATE_STRING.365
  CALLS  #1,GET_STRING_PARAM.323
  BRW    295$                            
 315$:
  PUSHAB TITLE_STRING.366
  CALLS  #1,GET_STRING_PARAM.323
  BRW    295$                            
 316$:
  PUSHAB SUBTITLE_STRING.367
  CALLS  #1,GET_STRING_PARAM.323
  MOVB   #255,EJECT_FLAG.353
  BRW    295$                            
 317$:
  MOVB   #255,EJECT_FLAG.353
  BRW    295$                            
 318$:
  PUSHL  #1
  PUSHL  #72
  PUSHL  #1
  CALLS  #3,WHOLE_NUMBER_PAR.260
  MOVB   R0,R10
  MOVZBW R10,LEFTMARGIN.337
  BRW    295$                            
 319$:
  MOVB   #255,INTVECTOR_FLAG.354
  BRW    295$                            
 320$:
  CLRB   INTVECTOR_FLAG.354
  BRW    295$                            
 321$:
  PUSHL  #1
  PUSHL  #3
  CLRL   -(SP)
  CALLS  #3,WHOLE_NUMBER_PAR.260
  MOVB   R0,R10
  MOVZBW R10,OPTIMIZE.345
  CLRW   I.433(R11)
 322$:
  MULW3  #7,I.433(R11),R10
  ADDW2  OPTIMIZE.345,R10
  CVTWL  R10,R10
  CVTWL  I.433(R11),R9
  MOVB   ASSUMPTION.413+OPTIMIZE_SETTING.415[R10],ASSUMPTION_FLAG.412[R9]
  ACBW   #14,#1,I.433(R11),322$                            
  BRW    295$                            
 323$:
  .PSECT  $PLM_ROM                        
 324$:
  .ASCII `OBJ`
  .PSECT  $PLM_CODE                       
  PUSHAB 324$
  PUSHAB OBJECT_FILE_STRI.364
  CALLS  #2,OPTIONAL_PATH_NA.328
  MOVB   #255,OBJECT_FLAG.355
  BRW    295$                            
 325$:
  CLRB   OBJECT_FLAG.355
  BRW    295$                            
 326$:
  MOVB   #255,OVERFLOW_FLAG.356
  BRW    295$                            
 327$:
  MOVB   #255,OVERFLOW_FLAG.356
  BRW    295$                            
 328$:
  MOVB   #255,DEBUG_FLAG.357
  BRW    295$                            
 329$:
  CLRB   DEBUG_FLAG.357
  BRW    295$                            
 330$:
  MOVB   #255,TYPE_FLAG.358
  BRW    295$                            
 331$:
  CLRB   TYPE_FLAG.358
  BRW    295$                            
 332$:
  CMPB   TOKN.207(R11),#40
  BNEQU  334$
 333$:
  BRW    335$                            
 334$:
  PUSHL  #2
  CALLS  #1,CONTROL_ERROR.238
 335$:
  MOVB   #44,TOKN.207(R11)
 337$:
  CMPB   TOKN.207(R11),#44
  BEQLU  338$
 336$:
  BRW    339$                            
 338$:
  CALLS  #0,GET_CONTROL_TOKE.248
  .PSECT  $PLM_ROM                        
 340$:
  .ASCII `TMP`
  .PSECT  $PLM_CODE                       
  PUSHAB 340$
  PUSHAB WORK_FILE_STRING.363
  CALLS  #2,PATH_NAME_PARAME.266
  CALLS  #0,GET_CONTROL_TOKE.248
  BRW    337$                            
 339$:
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
  BRW    295$                            
 341$:
  PUSHL  #40
  CALLS  #1,MUST_MATCH.252
  .PSECT  $PLM_ROM                        
 342$:
  .ASCII `SRC`
  .PSECT  $PLM_CODE                       
  PUSHAB 342$
  MULW3  #46,IN.385,R10
  CVTWL  R10,R10
  PUSHAB IN_FILE_STRING.368+46[R10]
  CALLS  #2,PATH_NAME_PARAME.266
  CALLS  #0,GET_CONTROL_TOKE.248
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
  CMPB   TOKN.207(R11),#13
  BNEQU  344$
 343$:
  BRW    345$                            
 344$:
  PUSHL  #10
  CALLS  #1,CONTROL_ERROR.238
 345$:
  CMPW   IN.385,#20
  BGEQ   347$
 346$:
  BRW    348$                            
 347$:
  PUSHL  #9
  CALLS  #1,CONTROL_ERROR.238
  BRW    349$                            
 348$:
  INCW   IN.385
  MULW3  #46,IN.385,R10
  CVTWL  R10,R10
  PUSHAB IN_FILE_STRING.368[R10]
  PUSHAW IN.385
  CALLS  #2,OPEN_SOS_FILE
 349$:
  BRW    295$                            
 350$:
  CMPW   SAVE_LEVEL.392(R11),#16
  BGEQ   352$
 351$:
  BRW    353$                            
 352$:
  PUSHL  #11
  CALLS  #1,CONTROL_ERROR.238
  BRW    354$                            
 353$:
  MULW3  #6,SAVE_LEVEL.392(R11),R10
  CVTWL  R10,R10
  MOVB   LIST_FLAG.339,CS.393+LIST.394(R11)[R10]
  MOVB   CODE_FLAG.348,CS.393+CODE.395(R11)[R10]
  MOVB   OVERFLOW_FLAG.356,CS.393+OVERFLOW.396(R11)[R10]
  MULW3  #3,SAVE_LEVEL.392(R11),R9
  CVTWL  R9,R9
  MOVW   LEFTMARGIN.337,CS.393+LEFTMARGIN.397(R11)[R9]
  MOVB   COND_FLAG.360,CS.393+COND.398(R11)[R10]
  INCW   SAVE_LEVEL.392(R11)
 354$:
  BRW    295$                            
 355$:
  TSTW   SAVE_LEVEL.392(R11)
  BLEQ   357$
 356$:
  BRW    358$                            
 357$:
  PUSHL  #11
  CALLS  #1,CONTROL_ERROR.238
  BRW    359$                            
 358$:
  DECW   SAVE_LEVEL.392(R11)
  MULW3  #6,SAVE_LEVEL.392(R11),R10
  CVTWL  R10,R10
  MOVB   CS.393+LIST.394(R11)[R10],LIST_FLAG.339
  MOVB   CS.393+CODE.395(R11)[R10],CODE_FLAG.348
  MOVB   CS.393+OVERFLOW.396(R11)[R10],OVERFLOW_FLAG.356
  MULW3  #3,SAVE_LEVEL.392(R11),R9
  CVTWL  R9,R9
  MOVW   CS.393+LEFTMARGIN.397(R11)[R9],LEFTMARGIN.337
  MOVB   CS.393+COND.398(R11)[R10],COND_FLAG.360
 359$:
  BRW    295$                            
 360$:
  CLRB   ROM_FLAG.359
  BRW    295$                            
 361$:
  MOVB   #255,ROM_FLAG.359
  BRW    295$                            
 362$:
  MOVW   #1,MODEL.346
  BRW    295$                            
 363$:
  MOVW   #2,MODEL.346
  MOVB   #255,LARGE_FLAG.340
  BRW    295$                            
 364$:
  MOVW   #3,MODEL.346
  BRW    295$                            
 365$:
  MOVW   #4,MODEL.346
  MOVB   #255,LARGE_FLAG.340
  BRW    295$                            
 366$:
  MOVB   #255,COND_FLAG.360
  BRW    295$                            
 367$:
  CLRB   COND_FLAG.360
  BRW    295$                            
 368$:
  CMPB   TOKN.207(R11),#40
  BNEQU  370$
 369$:
  BRW    371$                            
 370$:
  PUSHL  #2
  CALLS  #1,CONTROL_ERROR.238
 371$:
  MOVB   #44,TOKN.207(R11)
 373$:
  CMPB   TOKN.207(R11),#44
  BEQLU  374$
 372$:
  BRW    375$                            
 374$:
  CALLS  #0,GET_CONTROL_TOKE.248
  MOVW   #-1,I.433(R11)
  BRW    377$                            
 376$:
  CVTWL  I.433(R11),R10
  MOVB   ARGUMENT.209(R11)[R10],THIS_SWITCH.399(R11)[R10]
 377$:
  MOVZBW ARGUMENT.209(R11),R10
  ACBW   R10,#1,I.433(R11),376$                            
  CALLS  #0,GET_CONTROL_TOKE.248
  CMPB   TOKN.207(R11),#61
  BEQLU  379$
 378$:
  BRW    380$                            
 379$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CALLS  #0,LIMITED_EXPRESSI.291
  MOVB   R0,R10
  MOVZBL R10,-(SP)
  PUSHAB THIS_SWITCH.399(R11)
  CALLS  #2,DEFINE_SWITCH_VA.284
  BRW    381$                            
 380$:
  PUSHL  #255
  PUSHAB THIS_SWITCH.399(R11)
  CALLS  #2,DEFINE_SWITCH_VA.284
 381$:
  BRW    373$                            
 375$:
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
  BRW    295$                            
 382$:
  CMPB   TOKN.207(R11),#40
  BNEQU  384$
 383$:
  BRW    385$                            
 384$:
  PUSHL  #2
  CALLS  #1,CONTROL_ERROR.238
 385$:
  MOVB   #44,TOKN.207(R11)
 387$:
  CMPB   TOKN.207(R11),#44
  BEQLU  388$
 386$:
  BRW    389$                            
 388$:
  CALLS  #0,GET_CONTROL_TOKE.248
  CLRL   -(SP)
  PUSHAB ARGUMENT.209(R11)
  CALLS  #2,DEFINE_SWITCH_VA.284
  CALLS  #0,GET_CONTROL_TOKE.248
  BRW    387$                            
 389$:
  PUSHL  #41
  CALLS  #1,MUST_MATCH.252
  BRW    295$                            
 390$:
 IF_CASE.440:
  BRW    391$                            
 394$:
  PUSHL  #12
  CALLS  #1,CONTROL_ERROR.238
  BRW    393$                            
 395$:
  CALLS  #0,LIMITED_EXPRESSI.291
  MOVB   R0,R10
  BLBS   R10,397$
 396$:
  BRW    398$                            
 397$:
  PUSHL  #1
  CALLS  #1,PUSH_SKIP_STATE.404
  BRW    399$                            
 398$:
  PUSHL  #3
  CALLS  #1,PUSH_SKIP_STATE.404
 399$:
  BRW    393$                            
 400$:
  PUSHL  #2
  CALLS  #1,PUSH_SKIP_STATE.404
  BRW    393$                            
 401$:
  PUSHL  #2
  CALLS  #1,PUSH_SKIP_STATE.404
  BRW    393$                            
 402$:
  CALLS  #0,LIMITED_EXPRESSI.291
  MOVB   R0,R10
  BLBS   R10,404$
 403$:
  BRW    405$                            
 404$:
  PUSHL  #1
  CALLS  #1,PUSH_SKIP_STATE.404
  BRW    406$                            
 405$:
  PUSHL  #3
  CALLS  #1,PUSH_SKIP_STATE.404
 406$:
  BRW    393$                            
 391$:
  CASEW  SKIP_STATE.342,#0,#4
 392$:
  .SIGNED_WORD  394$-392$
  .SIGNED_WORD  395$-392$
  .SIGNED_WORD  400$-392$
  .SIGNED_WORD  401$-392$
  .SIGNED_WORD  402$-392$
 393$:
  BRW    295$                            
 407$:
 ELSEIF_CASE.441:
  BRW    408$                            
 411$:
  PUSHL  #12
  CALLS  #1,CONTROL_ERROR.238
  BRW    410$                            
 412$:
  MOVW   #2,SKIP_STATE.342
  BRW    410$                            
 413$:
  BRW    410$                            
 414$:
  CALLS  #0,LIMITED_EXPRESSI.291
  MOVB   R0,R10
  BLBS   R10,416$
 415$:
  BRW    417$                            
 416$:
  MOVW   #1,SKIP_STATE.342
 417$:
  BRW    410$                            
 418$:
  PUSHL  #12
  CALLS  #1,CONTROL_ERROR.238
  BRW    410$                            
 408$:
  CASEW  SKIP_STATE.342,#0,#4
 409$:
  .SIGNED_WORD  411$-409$
  .SIGNED_WORD  412$-409$
  .SIGNED_WORD  413$-409$
  .SIGNED_WORD  414$-409$
  .SIGNED_WORD  418$-409$
 410$:
  BRW    295$                            
 419$:
 ELSE_CASE.442:
  BRW    420$                            
 423$:
  PUSHL  #12
  CALLS  #1,CONTROL_ERROR.238
  BRW    422$                            
 424$:
  MOVW   #2,SKIP_STATE.342
  BRW    422$                            
 425$:
  BRW    422$                            
 426$:
  MOVW   #1,SKIP_STATE.342
  BRW    422$                            
 427$:
  PUSHL  #12
  CALLS  #1,CONTROL_ERROR.238
  BRW    422$                            
 420$:
  CASEW  SKIP_STATE.342,#0,#4
 421$:
  .SIGNED_WORD  423$-421$
  .SIGNED_WORD  424$-421$
  .SIGNED_WORD  425$-421$
  .SIGNED_WORD  426$-421$
  .SIGNED_WORD  427$-421$
 422$:
  BRW    295$                            
 428$:
 ENDIF_CASE.443:
  BRW    429$                            
 432$:
  PUSHL  #12
  CALLS  #1,CONTROL_ERROR.238
  BRW    431$                            
 433$:
  CALLS  #0,POP_SKIP_STATE.407
  BRW    431$                            
 434$:
  CALLS  #0,POP_SKIP_STATE.407
  BRW    431$                            
 435$:
  CALLS  #0,POP_SKIP_STATE.407
  BRW    431$                            
 436$:
  PUSHL  #12
  CALLS  #1,CONTROL_ERROR.238
  BRW    431$                            
 429$:
  CASEW  SKIP_STATE.342,#0,#4
 430$:
  .SIGNED_WORD  432$-430$
  .SIGNED_WORD  433$-430$
  .SIGNED_WORD  434$-430$
  .SIGNED_WORD  435$-430$
  .SIGNED_WORD  436$-430$
 431$:
  BRW    295$                            
 437$:
  .PSECT  $PLM_ROM                        
 438$:
  .ASCII `LST`
  .PSECT  $PLM_CODE                       
  PUSHAB 438$
  PUSHAB OPRINT_FILE_STRI.370
  CALLS  #2,OPTIONAL_PATH_NA.328
  MOVB   #255,OPRINT_FLAG.371
  BRW    295$                            
 439$:
  CLRB   OPRINT_FLAG.371
  BRW    295$                            
 440$:
  PUSHL  #8
  PUSHL  #99
  CLRL   -(SP)
  CALLS  #3,WHOLE_NUMBER_PAR.260
  MOVB   R0,R10
  MOVZBW R10,TABS.372
  BRW    295$                            
 441$:
  CLRW   TABS.372
  BRW    295$                            
 442$:
  MOVB   #255,WARN_FLAG.373
  BRW    295$                            
 443$:
  CLRB   WARN_FLAG.373
  BRW    295$                            
 444$:
  MOVB   #255,PLM80_FLAG.374
  BRW    295$                            
 445$:
  .PSECT  $PLM_ROM                        
 446$:
  .ASCII `GBL`
  .PSECT  $PLM_CODE                       
  MOVB   #255,GLOBALS_FLAG.375
  PUSHAB 446$
  PUSHAB GLOBALS_FILE_STR.379
  CALLS  #2,OPTIONAL_PATH_NA.328
  BRW    295$                            
 447$:
  CLRB   GLOBALS_FLAG.375
  BRW    295$                            
 448$:
  .PSECT  $PLM_ROM                        
 449$:
  .ASCII `PBL`
  .PSECT  $PLM_CODE                       
  MOVB   #255,PUBLICS_FLAG.376
  PUSHAB 449$
  PUSHAB PUBLICS_FILE_STR.380
  CALLS  #2,OPTIONAL_PATH_NA.328
  BRW    295$                            
 450$:
  CLRB   PUBLICS_FLAG.376
  BRW    295$                            
 451$:
  MOVB   #255,OVERLAY_FLAG.377
  PUSHAB OVERLAY_PREFIX.381
  CALLS  #1,GET_STRING_PARAM.323
  BRW    295$                            
 452$:
  CLRB   OVERLAY_FLAG.377
  BRW    295$                            
 453$:
  MOVB   #255,ROOT_FLAG.378
  BRW    295$                            
 454$:
  CLRB   ROOT_FLAG.378
  BRW    295$                            
 455$:
  MOVB   #255,ALIGN_FLAG.382
  BRW    295$                            
 456$:
  CLRB   ALIGN_FLAG.382
  BRW    295$                            
 457$:
  MOVB   #255,FREQ_FLAG.383
  BRW    295$                            
 458$:
  MOVB   #255,VECTOR_FLAG.384
  BRW    295$                            
 459$:
  CLRB   VECTOR_FLAG.384
  BRW    295$                            
 460$:
  CALLS  #0,PROCESS_ASSUMPTI.416
  BRW    295$                            
 461$:
  CLRL   -(SP)
  CALLS  #1,CONTROL_ERROR.238
  BRW    295$                            
 293$:
  CASEW  CMD.432(R11),#0,#71
 294$:
  .SIGNED_WORD  296$-294$
  .SIGNED_WORD  298$-294$
  .SIGNED_WORD  299$-294$
  .SIGNED_WORD  300$-294$
  .SIGNED_WORD  301$-294$
  .SIGNED_WORD  302$-294$
  .SIGNED_WORD  303$-294$
  .SIGNED_WORD  304$-294$
  .SIGNED_WORD  305$-294$
  .SIGNED_WORD  307$-294$
  .SIGNED_WORD  308$-294$
  .SIGNED_WORD  309$-294$
  .SIGNED_WORD  310$-294$
  .SIGNED_WORD  311$-294$
  .SIGNED_WORD  312$-294$
  .SIGNED_WORD  313$-294$
  .SIGNED_WORD  314$-294$
  .SIGNED_WORD  315$-294$
  .SIGNED_WORD  316$-294$
  .SIGNED_WORD  317$-294$
  .SIGNED_WORD  318$-294$
  .SIGNED_WORD  319$-294$
  .SIGNED_WORD  320$-294$
  .SIGNED_WORD  321$-294$
  .SIGNED_WORD  323$-294$
  .SIGNED_WORD  325$-294$
  .SIGNED_WORD  326$-294$
  .SIGNED_WORD  327$-294$
  .SIGNED_WORD  328$-294$
  .SIGNED_WORD  329$-294$
  .SIGNED_WORD  330$-294$
  .SIGNED_WORD  331$-294$
  .SIGNED_WORD  332$-294$
  .SIGNED_WORD  341$-294$
  .SIGNED_WORD  350$-294$
  .SIGNED_WORD  355$-294$
  .SIGNED_WORD  360$-294$
  .SIGNED_WORD  361$-294$
  .SIGNED_WORD  362$-294$
  .SIGNED_WORD  363$-294$
  .SIGNED_WORD  364$-294$
  .SIGNED_WORD  365$-294$
  .SIGNED_WORD  366$-294$
  .SIGNED_WORD  367$-294$
  .SIGNED_WORD  368$-294$
  .SIGNED_WORD  382$-294$
  .SIGNED_WORD  390$-294$
  .SIGNED_WORD  407$-294$
  .SIGNED_WORD  419$-294$
  .SIGNED_WORD  428$-294$
  .SIGNED_WORD  437$-294$
  .SIGNED_WORD  439$-294$
  .SIGNED_WORD  440$-294$
  .SIGNED_WORD  441$-294$
  .SIGNED_WORD  442$-294$
  .SIGNED_WORD  443$-294$
  .SIGNED_WORD  444$-294$
  .SIGNED_WORD  445$-294$
  .SIGNED_WORD  447$-294$
  .SIGNED_WORD  448$-294$
  .SIGNED_WORD  450$-294$
  .SIGNED_WORD  451$-294$
  .SIGNED_WORD  452$-294$
  .SIGNED_WORD  453$-294$
  .SIGNED_WORD  454$-294$
  .SIGNED_WORD  455$-294$
  .SIGNED_WORD  456$-294$
  .SIGNED_WORD  457$-294$
  .SIGNED_WORD  458$-294$
  .SIGNED_WORD  459$-294$
  .SIGNED_WORD  460$-294$
  .SIGNED_WORD  461$-294$
 295$:
  CLRB   FIRST_CONTROL.436(R11)
  CMPW   SKIP_STATE.342,#2
  BEQL   463$
 465$:
  CMPW   SKIP_STATE.342,#3
  BEQL   463$
 462$:
  BRW    464$                            
 463$:
  BRW     PREMATURE_EXIT.438              
 464$:
  CMPW   OLD_SKIP_STATE.434(R11),#2
  BEQL   467$
 469$:
  CMPW   OLD_SKIP_STATE.434(R11),#3
  BEQL   467$
 466$:
  BRW    468$                            
 467$:
  CALLS  #0,FORCE_LIST_SOURCE
 468$:
  BRW    252$                            
 PREMATURE_EXIT.438:
  CLRB   ARG_LENGTH.210(R11)
  MOVB   #32,DELIMITER.208(R11)
  RET
 MSK.CONTROL_LINE.431 = ^M<R9,R10,R11>                          
  .PSECT  $PLM_ROM                        
 VMSDELIMITERSET.444 = . 
  .BYTE   17
  .ASCII  `,()=#!%\~+-*/&|<>`
  .PSECT  $PLM_DATA                       
 STATUS.447 = .-M. 
  .BLKB  2
 I.448 = .-M. 
  .BLKB  2
  .PSECT  $PLM_CODE                       
 INVOCATION_LINE::
  .WORD   MSK.INVOCATION_L.446            
  MOVAB   M.,R11
  PUSHAW STATUS.447(R11)
  PUSHAB VMSDELIMITERSET.444
  CALLS  #2,DQSETDELIMITERS
  CALLS  #0,GET_CONTROL_TOKE.248
  .PSECT  $PLM_ROM                        
 470$:
  .ASCII `PLM`
  .PSECT  $PLM_CODE                       
  PUSHAB 470$
  MULW3  #46,IN.385,R10
  CVTWL  R10,R10
  PUSHAB IN_FILE_STRING.368[R10]
  CALLS  #2,PATH_NAME_PARAME.266
  MULW3  #46,IN.385,R10
  CVTWL  R10,R10
  PUSHAB IN_FILE_STRING.368[R10]
  PUSHAW IN.385
  CALLS  #2,OPEN_SOS_FILE
  MOVW   #-1,I.448(R11)
  BRW    472$                            
 471$:
  MULW3  #46,IN.385,R10
  ADDW2  I.448(R11),R10
  CVTWL  R10,R10
  CVTWL  I.448(R11),R9
  MOVB   IN_FILE_STRING.368+STRING.369[R10],PRINT_FILE_STRIN.361[R9]
  MOVB   IN_FILE_STRING.368+STRING.369[R10],WORK_FILE_STRING.363[R9]
  MOVB   IN_FILE_STRING.368+STRING.369[R10],IXREF_FILE_STRIN.362[R9]
  MOVB   IN_FILE_STRING.368+STRING.369[R10],OPRINT_FILE_STRI.370[R9]
  MOVB   IN_FILE_STRING.368+STRING.369[R10],GLOBALS_FILE_STR.379[R9]
  MOVB   IN_FILE_STRING.368+STRING.369[R10],PUBLICS_FILE_STR.380[R9]
  MOVB   IN_FILE_STRING.368+STRING.369[R10],OBJECT_FILE_STRI.364[R9]
 472$:
  MULW3  #46,IN.385,R10
  CVTWL  R10,R10
  MOVZBW IN_FILE_STRING.368+STRING.369[R10],R10
  ACBW   R10,#1,I.448(R11),471$                            
  .PSECT  $PLM_ROM                        
 473$:
  .ASCII `LIS`
  .PSECT  $PLM_CODE                       
  PUSHAW STATUS.447(R11)
  PUSHAB 473$
  PUSHAB PRINT_FILE_STRIN.361
  CALLS  #3,DQCHANGEEXTENSION
  .PSECT  $PLM_ROM                        
 474$:
  .ASCII `TMP`
  .PSECT  $PLM_CODE                       
  PUSHAW STATUS.447(R11)
  PUSHAB 474$
  PUSHAB WORK_FILE_STRING.363
  CALLS  #3,DQCHANGEEXTENSION
  .PSECT  $PLM_ROM                        
 475$:
  .ASCII `IXI`
  .PSECT  $PLM_CODE                       
  PUSHAW STATUS.447(R11)
  PUSHAB 475$
  PUSHAB IXREF_FILE_STRIN.362
  CALLS  #3,DQCHANGEEXTENSION
  .PSECT  $PLM_ROM                        
 476$:
  .ASCII `LST`
  .PSECT  $PLM_CODE                       
  PUSHAW STATUS.447(R11)
  PUSHAB 476$
  PUSHAB OPRINT_FILE_STRI.370
  CALLS  #3,DQCHANGEEXTENSION
  .PSECT  $PLM_ROM                        
 477$:
  .ASCII `OBJ`
  .PSECT  $PLM_CODE                       
  PUSHAW STATUS.447(R11)
  PUSHAB 477$
  PUSHAB OBJECT_FILE_STRI.364
  CALLS  #3,DQCHANGEEXTENSION
  .PSECT  $PLM_ROM                        
 478$:
  .ASCII `GBL`
  .PSECT  $PLM_CODE                       
  PUSHAW STATUS.447(R11)
  PUSHAB 478$
  PUSHAB GLOBALS_FILE_STR.379
  CALLS  #3,DQCHANGEEXTENSION
  .PSECT  $PLM_ROM                        
 479$:
  .ASCII `PBL`
  .PSECT  $PLM_CODE                       
  PUSHAW STATUS.447(R11)
  PUSHAB 479$
  PUSHAB PUBLICS_FILE_STR.380
  CALLS  #3,DQCHANGEEXTENSION
  CALLS  #0,CONTROL_LINE
  RET
 MSK.INVOCATION_L.446 = ^M<R9,R10,R11>                          
  .END                                    
